// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Shortener is an autogenerated mock type for the Shortener type
type Shortener struct {
	mock.Mock
}

// GetFullURL provides a mock function with given fields: hash
func (_m *Shortener) GetFullURL(hash string) (string, error) {
	ret := _m.Called(hash)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(hash)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(hash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Shorting provides a mock function with given fields: url
func (_m *Shortener) Shorting(url string) string {
	ret := _m.Called(url)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(url)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewShortener interface {
	mock.TestingT
	Cleanup(func())
}

// NewShortener creates a new instance of Shortener. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewShortener(t mockConstructorTestingTNewShortener) *Shortener {
	mock := &Shortener{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
